#!/bin/bash

# Create one emacsserver frame so that thereafter the key binding that created them merely visits the
# workspace. This is a quick-and-dirty script based upon the emacsclient workspace script.

# $1 is ${workspace}:${maxinstances}
# but maxinstances must be one for a server
# ------------------------------------------------------------------------------

debug=/tmp/debug  ## run watch -n 1 cat /tmp/debug in a terminal
echo '----' > $debug

case "${2:-1}" in
    (:[0-9][0-9]|:[0-9])
        delay=${2/:/}
        sleep $(delay)
        ;;
esac
case "$1" in
    ([0-9][0-9]:1|[0-9][0-9]|[0-9]:1|[0-9])
        ws=${1/:*}
        swaymsg "workspace --no-auto-back-and-forth number $ws"
        # Allow plenty of time at each step to avoid retry, it's once per session.
        sleep 3s
        ;;
    (*)
        echo "bad arg[1] $ws" >> $debug
        exit 1
        ;;
esac
list=$(swaymsg -t get_workspaces -p | grep -A3 '\(focused\)')
echo $list >> $debug
represent=$(echo $list | grep Represent | sed 's/\(\[\|\]\)/\n/g')
instances=$(echo $represent | sed 's/\(\[\|\]\)/\n/g' | grep -c 'Emacs')
echo "ready :-)" >> $debug
if [ $instances -eq 0 ]; then
    exe="exec gio launch /home/ellathecat/Desktop/emacs-server.desktop"
    echo "launch $exe" >> $debug
    swaymsg "$exe"
    # Allow plenty of time at each step to avoid retry, it's once per session.
    sleep 5s
    frame=0
    swaymsg "title_format \"emacsserver workspace $ws %title\""
    swaymsg "mark --replace \"$ws$frame\""
    # Sometimes apps start on another workspace.
    swaymsg "move container to workspace $ws"
    sleep 2s
    exit 0
elif [ $instances -eq 1 ]; then
    exit 0
fi
exit 1

# ------------------------------------------------------------------------------------------------------

#
# Done.
#
