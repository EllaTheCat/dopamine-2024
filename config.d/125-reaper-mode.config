# -*- Mode: Shell-script -*-
# reaper mode
# ------------------------------------------------------------------------------------------------------

# DONT FEAR THE REAPER (by container) ------------------------------------------------------------------

# https://en.wikipedia.org/wiki/(Don%27t_Fear)_The_Reaper
# https://www.youtube.com/watch?v=Dy4HA3vUv2c

set $reaper :Don_t Fear The Reaper: [$mod+Shift+q] kill [space] mode default

mode "$reaper" {
    bindsym space mode default

    # 135-mod4-bindings has: 'bindsym $mod+Shift+q mode "$reaper"' because 'bindsym $mod+Shift+q kill'
    # is common practice. Pressing '$mod+Shift+q' the first time does nothing but change to "$Reaper"
    # mode. Pressing '$mod+Shift+q' the second time kills (hence the grim reaper) and then changes back
    # to default mode. Pressing space instead of $mod+Shift+q on the second keypress returns to default
    # mode without a visit from the reaper.

    # This former back-compatibility feature has worked so well in practice it is now the preferred kill
    # binding. This key should always be '$mod+Shift+q' never '$mod+q" and never 'q'.
    bindsym $mod+Shift+q mode default, kill;
}

# DONT FEAR THE REAPER (by workspace) ------------------------------------------------------------------

# This mode lets you walk through the list of the workspace tabs quickly in either diection by
# repeatedly pressing a key. You walk in ascending numeric order of workspace number. You can kill all
# containers in a workspace and advance to the next in one button press; a use case might be checking
# that buffers have been saved, pages bookmarked, before exiting sway, It becane apparent that this
# proposed reaper mode shoukd also be a generic workspace management mode, hence ws+reaper=wsreaper.

set $wsreaper :Workspaces: TAB or MENU [\|] empties a workspace.

mode "$wsreaper" {
    bindsym space mode default
    # Use same key for leaving the mode and entering the mode. Fn independent thanks to key chord.
    bindsym Mod5+Menu mode default
    bindsym left+down     mode default

    # Empty this workspace, advance to next workspace. For either hand.
    bindsym Tab [workspace=__focused__] kill, workspace next;
    bindcode 51 [workspace=__focused__] kill, workspace next;

    # These move focus in strict numerical order of workspace, hopping from output to output as
    # required, wrapping round at the ends.
    bindsym j workspace prev
    bindsym k workspace next
    # These are well behaved, either moving to an adjacent workspace TAB or wrapping round at the ends.
    bindsym n workspace prev_on_output
    bindsym m workspace next_on_output

    # Focus the one you want to move beforehand, and >click< it's on the other monitor. These keys are
    # used in MenuMode and with $mod.
    bindsym y move workspace to output left
    bindsym u move workspace to output right

    # A common use case, toggle between two workspaces.
    bindsym q workspace back and forth

    # These two list workspaces by output in rofi menus so you can see where a workspace is without
    # resort to the tabs on a status bar, or in fullscreen.

    # Move a workspace to an output.
    bindsym o exec map-ws-to-op-menu.script
    # Rename a workspace, swap workspaces as required or as requested.
    bindsym p exec rename-or-swap-ws-menus.script

    # Visit workspace, move container to workspace.
    bindsym 1 mode $divkey
    bindsym 2 mode $mulkey
    # Custom commands. Non-essential?
    bindsym 3 mode $subkey
    bindsym 4 mode $addkey
    bindsym 5 mode $ntrkey
}
#
# ---------------- Fn Shift [OFF]= [{Alt Menu slash Ctrl} instead of cursor arrows. --------------------
#
# Fn independent thanks to key chord miracle.
bindsym Mod5+Menu mode "$wsreaper"
bindsym left+down     mode "$wsreaper"

# This pair is a wart, but it's very useful in default mode.
bindsym Mod5+j workspace prev
bindsym Mod5+k workspace next

#
# Done.
#
