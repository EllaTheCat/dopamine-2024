                                                                                                                                                                                                                              # -*- Mode: Shell-script -*-
# reaper mode
# ------------------------------------------------------------------------------------------------------

# DONT FEAR THE REAPER (by container) ------------------------------------------------------------------

# https://en.wikipedia.org/wiki/(Don%27t_Fear)_The_Reaper
# https://www.youtube.com/watch?v=Dy4HA3vUv2c

set $reaper :Don_t Fear The Reaper: [$mod+Shift+q] kill [space] mode default

mode "$reaper" {
    bindsym space mode default

    # 135-mod4-bindings has: 'bindsym $mod+Shift+q mode "$reaper"' because 'bindsym $mod+Shift+q kill'
    # is common practice. Pressing '$mod+Shift+q' the first time does nothing but change to "$Reaper"
    # mode. Pressing '$mod+Shift+q' the second time kills (hence the grim reaper) and then changes back
    # to default mode. Pressing space instead of $mod+Shift+q on the second keypress returns to default
    # mode without a visit from the reaper.

    # This former back-compatibility feature has worked so well in practice it is now the preferred kill
    # binding. This key should always be '$mod+Shift+q' never '$mod+q" and never 'q'.
    bindsym --no-repeat $mod+Shift+q mode default, kill;
}

# DONT FEAR THE REAPER (by workspace)

# Binding Mode Indicators. These strings must be unique because they behave like names/identifiers:
set $wsreaper    :Don_t Fear The Reaper: [Tab|Esc] kill|spare this ws and advance to next
set $wsopreaper  :Don_t Fear The Reaper: [Tab|Esc] kill|spare this ws and advance to next on output
set $wsnavigate  :Don_t Fear The Reaper: [q ert yui op jk nm 12345] navigate workspaces
mode "$wsreaper"  {
    bindsym space mode default
    # advance to the next workspace.
    # Kill or spare all containers on the workspace.

    bindsym --release --no-repeat Tab    workspace next, [workspace="__focused__"] kill;
    bindsym --release --no-repeat Escape workspace next;
}

mode "$wsopreaper"  {
    bindsym space mode default
    # advance to the next workspace on the current output.
    # Kill or spare all containers on the workspace.


    bindsym --release --no-repeat Tab    workspace next_on_output, [workspace="__focused__"]  kill;
    bindsym --release --no-repeat Escape workspace next_on_output;
}

# ------------------------------------------------------------------------------------------------------

# Entry from default mode.
bindsym --release left+down  mode "$wsreaper"
bindsym --release down+right mode "$wsopreaper"

# ------------------------------------------------------------------------------------------------------

mode "$wsnavigate" {
    bindsym space mode default
    # Same bindings as default mode.
    bindsym --release left+down mode "$wsreaper"
    bindsym --release down+right mode "$wsopreaper"

    # These move focus in strict numerical order of workspace, hopping from output to output as
    # required, wrapping round at the ends.
    bindsym j workspace prev
    bindsym k workspace op
    # As for JK immediately above except these wrap round at the ends.
    bindsym n workspace prev_on_output
    bindsym m workspace op_on_output

    # When selecting one of three monitors the mouse becomes increasingly cumbersome, use these keys
    bindsym e focus output $leftoutput
    bindsym r focus output $rightoutput
    bindsym t focus output $thirdoutput

    # Focus the one you want to move beforehand, and >click< it's on the other monitor. These keys are
    # used in MenuMode and with $mod.
    bindsym y move workspace to output $leftoutput
    bindsym u move workspace to output $rightoutput
    bindsym i move workspace to output $thirdoutput

    # A common use case, toggle between two workspaces.
    bindsym q workspace back and forth

    # These two list workspaces by output in rofi menus so you can see where a workspace is without
    # resort to the tabs on a status bar, or in fullscreen.

    # Move a workspace to an output.
    bindsym o exec map-ws-to-op-menu.script
    # Rename a workspace, swap workspaces as required or as requested.
    bindsym p exec rename-or-swap-ws-menus.script

    # Visit workspace, move container to workspace, table3, table4. drop terminal on workspace.
    bindsym 1 mode $divkey
    bindsym 2 mode $mulkey
    bindsym 3 mode $subkey
    bindsym 4 mode $addkey
    bindsym 5 mode $ntrkey
}

# Entry from default mode.
bindsym Mod1+space "$wsnavigate"
# Entry from $wsreaper and $opwsreaper TBD.

# ------------------------------------------------------------------------------------------------------

#
# Done.
#
