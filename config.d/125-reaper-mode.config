# -*- Mode: Shell-script -*-
# Reaper modes
# ------------------------------------------------------------------------------------------------------

# DONT FEAR THE REAPER (by container) ------------------------------------------------------------------

# https://en.wikipedia.org/wiki/(Don%27t_Fear)_The_Reaper
# https://www.youtube.com/watch?v=Dy4HA3vUv2c

set $reaper :Don_t Fear The Reaper: [$mod+Shift+q] kill [space] mode default

mode "$reaper" {
    bindsym space mode default

    # 135-mod4-bindings has: 'bindsym $mod+Shift+q mode "$reaper"' because 'bindsym $mod+Shift+q kill'
    # is common practice. Pressing '$mod+Shift+q' the first time does nothing but change to "$Reaper"
    # mode. Pressing '$mod+Shift+q' the second time kills (hence the grim reaper) and then changes back
    # to default mode. Pressing space instead of $mod+Shift+q on the second keypress returns to default
    # mode without a visit from the reaper.

    # This former back-compatibility feature has worked so well in practice it is now the preferred kill
    # binding. This key should always be '$mod+Shift+q' never '$mod+q" and never 'q'.
    bindsym --no-repeat $mod+Shift+q mode default, kill;
}

# DONT FEAR THE REAPER (by workspace)

# These three CONFIG variables have the same values as the CONFIG variables in '109-output.config'.
set  $first HDMI-A-1
set $second HDMI-A-2
set  $third VGA-1

# Binding Mode Indicators. These strings must be unique because they behave like names/identifiers:
set $wsreaper    :Don_t Fear The Reaper: [Tab|Escape] kill|spare this ws and advance to next
set $wsnavigate  :Don_t Fear The Reaper: [q asd yui op jk nm 12345] navigate workspaces

#
# Walk the list of workspaces, output by output, either killing all containers on the workspace in one
# fell swoop (Tab) or saving them all from the reaper (Escape-on-Caps-key).
#
# - stash the current workspace
# - advance to the next workspace _while the current one is still valid_.
# - kill or spare all containers on the stashed workspace.
#
# The use case is an eyeball check on each workspace to see if its containers are accounted for and are
# neither idle nor running late.
#
mode "$wsreaper"  {
    bindsym space mode default
    bindsym down+right mode "$wsnavigate"


    # Kill all containers on this workspace.
    bindsym --no-repeat Tab exec 125-reaper-mode.script mtws;
    # Spare all containers on this workspace.
    bindsym --no-repeat Escape exec 125-reaper-mode.script nxws;

    # (w)ASD to select output for "next on output" in one keypress.
    bindsym a focus output $first
    bindsym s focus output $second
    bindsym d focus output $third
}
# ------------------------------------------------------------------------------------------------------
# Entry from default mode.
bindsym left+down mode "$wsreaper"
# ------------------------------------------------------------------------------------------------------

mode "$wsnavigate" {
    bindsym space mode default
    bindsym left+down mode "$wsreaper"

    # These move focus in strict numerical order of workspace, hopping from output to output as
    # required, wrapping round at the ends.
    bindsym j workspace prev
    bindsym k workspace next
    # As for JK immediately above except these wrap round at the ends.
    bindsym n workspace prev_on_output
    bindsym m workspace next_on_output

    # When selecting one of three monitors the mouse becomes increasingly cumbersome, use these keys
    bindsym e focus output $first
    bindsym r focus output $second
    bindsym t focus output $third

    # Focus the one you want to move beforehand, and >click< it's on the other monitor. These keys are
    # used in MenuMode and with $mod.
    bindsym y move workspace to output $first
    bindsym u move workspace to output $second
    bindsym i move workspace to output $third

    # A common use case, toggle between two workspaces.
    bindsym q workspace back and forth

    # These two list workspaces by output in rofi menus so you can see where a workspace is without
    # resort to the tabs on a status bar, or in fullscreen.

    # Move a workspace to an output.
    bindsym o exec map-ws-to-op-menu.script
    # Rename a workspace, swap workspaces as required or as requested.
    bindsym p exec rename-or-swap-ws-menus.script

    # Visit workspace, move container to workspace, table3, table4. drop terminal on workspace.
    bindsym 1 mode $divkey
    bindsym 2 mode $mulkey
    bindsym 3 mode $subkey
    bindsym 4 mode $addkey
    bindsym 5 mode $ntrkey
}

# Entry from default mode.
bindsym down+right mode "$wsnavigate"

# ------------------------------------------------------------------------------------------------------

#
# Done.
#
