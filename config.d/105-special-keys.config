# -*- Mode: Shell-script -*-
# special-keys.config
# The special keys are introduced and their default mode bindings defined here.
# ------------------------------------------------------------------------------------------------------

# $MOD IS MOD4 IS SUPER --------------------------------------------------------------------------------

# Modifier key is Mod4 (Super).  Offering too many choices causes analysis paralysis in users, by
# mandating Mod4 everybody wins (I'll get my coat).

set $mod Mod4

# LEFT HAND MODIFIER TRIPLET ---------------------------------------------------------------------------

# The xkb options rotate the three modifier key positions from Control_L Super_L Alt_L to Super_L Alt_L
# Control_L. This sidesteps arguments for a different $mod based upon key positions. 113-input.config
# has a line like this to make it so:

###input 12815:20571:Evision_RGB_Keyboard xkb_options ctrl:swap_lalt_lctl_lwin,caps:escape

# Advantages are that using Control as a modifier is made comfortable, Caps Lock key as escape makes
# using nvim and related editors more comfortable.

# GETTING BACK TO DEFAULT MODE --------------------------------------------------------------------------

# The first editor command everyone learns is how to get out of the editor, and it is the same with modes.

# WITHOUT EXCEPTION pressing the SPACE bar returns to default mode.
# Not escape, not Return, but SPACE bar.

# NOTE TO SELF: An annoying and frustrating and common failure mode is when the keyboard refuses to type
# a space but space works in bindings. It arose recently because a mode declaration lacked the opening
# curly brace, control fell through to the "bindsym space mode default" line and hilarity ensued. Use
# "K&R" opening braces for modes as a preventative measure henceforth.

# ROFI MENUS -------------------------------------------------------------------------------------------

# From` the rofi man page: "A very useful setup in minimalistic window managers is to combine drun, run
# with window mode. In this setup it first list all open applications, then all installed
# applications. So if you type firefox and hit return, it will switch to the running firefox, or launch
# it when it is not running."

set $roficwdr mode default, \
    exec rofi -show combi -modes combi -combi-modes "window,drun,run" ;
set $roficwfs mode default, \
    exec rofi -show combi -modes combi -combi-modes "window,filebrowser,ssh" ;

# MENU KEYS -------------------------------------------------------------------------------------------

# In an ideal world the Menu key would have a counterpart on the left, where Caps_Lock lives. We almost
# got there; these have all been tried in various combinations:
#
# Case 1a             bindsym Menu
# Case 1b             bindsym Escape
# Case 1c             bindcode 66    # caps lock

# Case 2a             bindcode 94    # backslash left
# Case 2b             bindcode 51    # backslash right

# Case 3              bindsym XFAudioPlay

# KEY CHORDS -------------------------------------------------------------------------------------------

# Sway has a "shortcut" feature not found in i3, the "key chords" of Emacs. This requires that your
# keyboard has "N-key rollover". Two or more modifiable (sic) keys pressed simultaneously generate a
# unique keysym that can be bound. For example a+s means press a and s together. Unfortunately, it's
# unreliable. Users should not bind key chords.

# Two such shortcuts using only arrow keys do work reliably and two bindings have been reserved,
# left+down and down+right, see 125-reaper-mode.

# MULTIMEDIA KEYS --------------------------------------------------------------------------------------

# The multimedia keys on compact keyboards are first-class keys, unlike the small or rubbery keys on
# some desktop keyboards, but they require the Fn key to be used like a modifier for keys A,S,,D.
 bindsym --release XF86AudioPrev $roficwdr
 bindsym --release XF86AudioNext $roficwfs
 bindsym --release XF86AudioPlay mode "$MenuKeys"

# MENU on LEFT BACKSLASH is the WINNER! ----------------------------------------------------------------

# The hardware Menu key is fine except it DISAPPEARS when you use the cursor key toggle on a compact
# keyboard!

# The keys witk bindcodes 51 and 94 have the same keysyms as each other, backslash and bar. Either one
# may be repurposed to behave like the Menu key. The key on the right, opposite Tab and above Enter is usually the
# winner on compact keyboards. it makes typing Menu then Return easy and as such it is bound to sway
# reload, see 137-menu-key-mode.

# Unfortunately for EllaTheCat, my Parkinsons-induced typos often include presses of the large backslash
# key on the right when used as Menu, with disasterous consequences. The Menu key is placed on the small
# backslash key on the left by disabling bindcode 51 instead of bindcode 94. There is no reload binding
# equivalent to Menu then Return; that binding should be removed. Se the green banner section below

bindsym Menu mode "$MenuKeys"
bindcode 94  mode "$MenuKeys"
#indcode 51  mode "$MenuKeys"

# Typing Menu inside modes should be consistent, use left [right] backslash in non-default modes when
# left [right] backslash is used in default mode, see 137-menu-key-mode.

# GREEN BANNER -----------------------------------------------------------------------------------------

# Toggle the green banner for mouse operated online help, sway reload and sway exit. With Caps Lock as
# Escape by default this can be used one-handed.
bindsym Mod4+Shift+Escape \
        exec $ETC_SWAY_SCRIPTS_DIR/green-banner.script toggle

# XFCE4 APPLICATION FINDER -----------------------------------------------------------------------------

# The features of this app may or may not fit your workflow, but it is low in resources, and welcome in
# the toolbox. It can inhibit swayidle, see '111-idle.config'.

bindsym Mod1+Shift+Escape \
        exec xfce4-appfinder

# ------------------------------------------------------------------------------------------------------

#
# Done
#
