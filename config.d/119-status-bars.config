# -*- Mode: Shell-script -*-
# statusbars.config

# Overview ----------------------------------------------------------------------------------------------

# There are four bars, each of the two outputs has a bar at its top and bottom edges. Each bar can have its
# own colour and opacity, set at config time.

# There are two status bars at the top, their positions cam be swapped ON THE FLY by a button3 click on
# either bar. FIXME Needs one button2 click at start of session to initialise the swap functionslity.

# The bars can be showing permanently, but in this config they are controlled by modifiers.
# Upper left and upper right (status) have their own independent modifiers, Mod4 and Mod1,
# The lowr left and right (workspace tabs, binding mode indicator) share a modifier, Control.
#
# Mod4+b toggles all four bars betweem show and hide.
# Menu [\|] shows the lower bars with workspace tabs and the binding mode indicator.

# Too much? in the bar{} comfig, changw mode from 'hide' to 'dock' for everythng on,

# ------------------------------------------------------------------------------------------------------

# STATUS_BAR_BACKGROUNDS -------------------------------------------------------------------------------

# Translucency looks good on status bars, tinted to match the backdrop. Here we have a simple grey.
set $upperleft   #333333aa
set $upperright  #333333aa
set $lowerleft   #333333aa
set $lowerright  #333333aa

# Names of colours in French differentiates status bar colours from window decoration colours used in
# 117-appearances, just in case.

set $blanc #ffffff
set $rouge #882222
set $vert #226622
set $bleu #222266
set $jaune #ffff00
set $gris #222222
set $noir #000000

# Each bar can show or hide independently given distinct modifiers, but here they are in lockstep with
# one shared modifier.

set $llmod Mod1
set $lrmod Mod1
set $ulmod Mod1
set $urmod Mod1

# Also there's the bar mode_toggle command, bound to Mod4+b or Menu then b. If you
# hide tthe workspace tabs there are commands that list workspaces by output, see
# "map-ws-to-op-menu.script","rename-or-swap-menus.script".
# ------------------------------------------------------------------------------------------------------

# 1st of 2 bottom bars. On my desk it is on the LEFT.
# Mouse button support for moving containers or workspaces to the output on the RIGHT.
bar {
    output $leftoutput
    tray_output $leftoutput
    tray_padding 4 px

    mode dock
    hidden_state hide
    modifier $llmod

    font pango:DejaVu Sans 10
    position bottom
    binding_mode_indicator yes
    colors {
        statusline $blanc
        background $lowerleft
        binding_mode $jaune $jaune $noir
        urgent_workspace $rouge $rouge $blanc
        focused_workspace $blanc $blanc $vert
        active_workspace $bleu $bleu $blanc
        inactive_workspace $gris $gris $blanc
    }
    workspace_buttons yes
    workspace_min_width 40
    strip_workspace_name no

    bindsym button2 move container to output right
    bindsym button3 move workspace to output right
}

# ------------------------------------------------------------------------------------------------------

# 2nd of 2 bottom bars. On my desk it is on the RIGHT.
# Mouse button support for moving containers or workspaces to the output on the LEFT.
bar {
    output $rightoutput
    tray_output none

    mode dock
    hidden_state hide
    modifier $lrmod

    font pango:DejaVu Sans 10
    position bottom
    binding_mode_indicator yes
    colors {
        statusline $blanc
        background $lowerright
        binding_mode $jaune $jaune $noir
        urgent_workspace $rouge $rouge $blanc
        focused_workspace $blanc $blanc $vert
        active_workspace $bleu $bleu $blanc
        inactive_workspace $gris $gris $blanc
    }
    workspace_buttons yes
    workspace_min_width 40
    strip_workspace_name no

    bindsym button2 move container to output left
    bindsym button3 move workspace to output left
}

# ------------------------------------------------------------------------------------------------------

# 1st of 2 top bars. On my desk it is on the LEFT.
bar {
    output $leftoutput
    tray_output none

    status_command while true; do upper-status-bars.script L; done

    mode dock
    hidden_state hide
    modifier $ulmod

    Colors {
        statusline $blanc
        background $upperleft
        inactive_workspace #32323200 #32323200 #5c5c5c
    }

    font pango:DejaVu Sans 10
    position top
    binding_mode_indicator no
    workspace_buttons no

    bindsym button2 exec upper-status-bars.script I
    bindsym button3 exec upper-status-bars.script S
}

# ------------------------------------------------------------------------------------------------------

# 2nd of 2 top bars. On my desk it is on the RIGHT.
bar {
    output $rightoutput
    tray_output none

    status_command while true; do upper-status-bars.script R; done

    mode dock
    hidden_state hide
    modifier $urmod

    colors {
        statusline $blanc
        background $upperright
        inactive_workspace #32323200 #32323200 #5c5c5c
    }

    font pango:DejaVu Sans 10
    position top
    binding_mode_indicator no
    workspace_buttons no

    bindsym button2 exec upper-status-bars.script I
    bindsym button3 exec upper-status-bars.script S
}

# AUTOTILING -------------------------------------------------------------------------------------------

# If autotiling is running then the status bar shows AT:ON

# <QUOTE>
# (Autotiling) works on both sway and i3 window managers.
# Inspired by https://github.com/olemartinorg/i3-alternating-layout
# Copyright:# 2019-2021 Piotr Miller & Contributors
# e-mail: nwg.piotr@gmail.com
# Project: https://github.com/nwg-piotr/autotiling License: GPL3
# </QUOTE>

# YDOTOOLD ---------------------------------------------------------------------------------------------

# The ydotool daemon / server "ydotoold" must be running for ydotool to work. If ydotoold is running,
# the status bar shows YD:ON.

# STATUS COMMANDS --------------------------------------------------------------------------------------

# Start the upper status bar status commands, the delays provide setup time, the flags I S initialise
# the toggle feature (which command run on which upper bar can be swapped on-the-fly)
exec upper-status-bars.script I 7s
exec upper-status-bars.script S 9s

# ------------------------------------------------------------------------------------------------------
#
# Done
#
